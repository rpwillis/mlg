<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoCS" xml:space="preserve">
    <value>WARNING: Unable to display Class Server data</value>
  </data>
  <data name="NoEX" xml:space="preserve">
    <value>WARNING: Unable to display Exchange data.</value>
  </data>
  <data name="NoSPS" xml:space="preserve">
    <value>WARNING: Unable to display SharePoint data.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>ERROR: </value>
  </data>
  <data name="CatAdvanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="ShowErrName" xml:space="preserve">
    <value>Show Errors</value>
  </data>
  <data name="ShowErrDesc" xml:space="preserve">
    <value>Shows errors from the different data sources</value>
  </data>
  <data name="CatClassServer" xml:space="preserve">
    <value>Class Server Settings</value>
  </data>
  <data name="PWName" xml:space="preserve">
    <value>Generic Password</value>
  </data>
  <data name="PWDesc" xml:space="preserve">
    <value>Use a generic user account when using Integrated security</value>
  </data>
  <data name="UNName" xml:space="preserve">
    <value>Generic Username</value>
  </data>
  <data name="UNDesc" xml:space="preserve">
    <value>Use a generic user account when using Integrated security</value>
  </data>
  <data name="CSWSName" xml:space="preserve">
    <value>Class Server Web Service</value>
  </data>
  <data name="CSWSDesc" xml:space="preserve">
    <value>Class Server Web Service e.g. http://myserver/MicrosoftClassServer/Service</value>
  </data>
  <data name="CSURLName" xml:space="preserve">
    <value>Class Server Student URL</value>
  </data>
  <data name="CSURLDesc" xml:space="preserve">
    <value>Class Server Student URL e.g. http://myserver/MicrosoftClassServer/Student</value>
  </data>
  <data name="CatExchange" xml:space="preserve">
    <value>Exchange Settings</value>
  </data>
  <data name="EXURLName" xml:space="preserve">
    <value>Exchange URL</value>
  </data>
  <data name="EXURLDesc" xml:space="preserve">
    <value>Exchange URL e.g. http://myserver/exchange</value>
  </data>
  <data name="EXDomName" xml:space="preserve">
    <value>Exchange Domain</value>
  </data>
  <data name="EXDomDesc" xml:space="preserve">
    <value>Exchange Domain e.g. Demo</value>
  </data>
  <data name="EXUserName" xml:space="preserve">
    <value>Exchange User</value>
  </data>
  <data name="EXUserDesc" xml:space="preserve">
    <value>Exchange Admin User</value>
  </data>
  <data name="EXPwdName" xml:space="preserve">
    <value>Exchange Password</value>
  </data>
  <data name="EXPwdDesc" xml:space="preserve">
    <value>Exchange Admin Password</value>
  </data>
  <data name="CatSharePoint" xml:space="preserve">
    <value>SharePoint Settings</value>
  </data>
  <data name="SPEventListName" xml:space="preserve">
    <value>Event List URL(s)</value>
  </data>
  <data name="SPEventListDesc" xml:space="preserve">
    <value>Comma separated list of Event List URLs e.g. http://myserver/schools/AmstelPS/Lists/Events,http://myserver/C2/MySchedules/Lists/Events</value>
  </data>
  <data name="SPQlinkName" xml:space="preserve">
    <value>(Optional) Quick Links Group</value>
  </data>
  <data name="SPQlinkDesc" xml:space="preserve">
    <value>A group name in the Quick Links on My Site to search for Appointment Items. If not specified, all groups will be searched</value>
  </data>
  <data name="PropNotSet" xml:space="preserve">
    <value>Not all required properties have been configured.</value>
  </data>
  <data name="QLWSName" xml:space="preserve">
    <value>Quick Links Web Service URL</value>
  </data>
  <data name="QLWSDesc" xml:space="preserve">
    <value>Location of the Quick Links web service</value>
  </data>
  <data name="LITName" xml:space="preserve">
    <value>Event List Title(s)</value>
  </data>
  <data name="LITDesc" xml:space="preserve">
    <value>Comma separated list of Event List Titles matching the event lists specified above e.g.School Events,Department Events </value>
  </data>
  <data name="EnableOverrideDomainText" xml:space="preserve">
    <value>Override default mail alias</value>
  </data>
  <data name="EnableOverrideDomainDesc" xml:space="preserve">
    <value>Use this to enable using a domain other than the users default domain</value>
  </data>
  <data name="CalendarStoreRole" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="CalendarStoreRoleDesc" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="CalendarStoreSettings" xml:space="preserve">
    <value>Planner Store Settings</value>
  </data>
  <data name="CalendarStoreURL" xml:space="preserve">
    <value>Calendar Store URL</value>
  </data>
  <data name="CalendarStoreUrlDesc" xml:space="preserve">
    <value>The URL of the Calendar Store</value>
  </data>
  <data name="IsParentMode" xml:space="preserve">
    <value>Parent Mode</value>
  </data>
  <data name="IsParentModeDesc" xml:space="preserve">
    <value>Enable Parent Mode</value>
  </data>
  <data name="RoleMissing" xml:space="preserve">
    <value>Role {0} doesn't exist or Calendar Store URL {1}  is incorrect</value>
  </data>
  <data name="CalendarStoreIsMissing" xml:space="preserve">
    <value>Can't find the Calendar Store list</value>
  </data>
  <data name="CalendarTheamComplaint" xml:space="preserve">
    <value>MyPlanner is complaint with site theam</value>
  </data>
  <data name="UserPreferencesStoreDesc" xml:space="preserve">
    <value>The URL of the User Preferences Store</value>
  </data>
  <data name="UserPreferencesStoreUrl" xml:space="preserve">
    <value>User Preferences Store URL</value>
  </data>
  <data name="UserPreferencesStoreMissing" xml:space="preserve">
    <value>User Preferences Store {0}  is missing or inaccessible</value>
  </data>
  <data name="DNSName" xml:space="preserve">
    <value>Common Name</value>
  </data>
  <data name="DNSNameDesc" xml:space="preserve">
    <value>DNS Name</value>
  </data>
  <data name="DNSNameIsMissing" xml:space="preserve">
    <value>DNS Name is missing</value>
  </data>
</root>