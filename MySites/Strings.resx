<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CatSiteSettings" xml:space="preserve">
    <value>Site Settings</value>
  </data>
  <data name="PageViewName" xml:space="preserve">
    <value>Page View</value>
  </data>
  <data name="PageViewDesc" xml:space="preserve">
    <value>Open link in shared or personal view?</value>
  </data>
  <data name="StartSiteName" xml:space="preserve">
    <value>Start Site</value>
  </data>
  <data name="StartSiteDesc" xml:space="preserve">
    <value>The WSS Site to list the accessible sub-sites of it.</value>
  </data>
  <data name="NewSiteURLName" xml:space="preserve">
    <value>New Site URL</value>
  </data>
  <data name="NewSiteURLDesc" xml:space="preserve">
    <value>URL to create new site</value>
  </data>
  <data name="EditSiteURLName" xml:space="preserve">
    <value>Edit Site URL</value>
  </data>
  <data name="EditSiteURLDesc" xml:space="preserve">
    <value>URL to edit a site</value>
  </data>
  <data name="ShowNewLinkName" xml:space="preserve">
    <value>Show New Link</value>
  </data>
  <data name="ShowNewLinkDesc" xml:space="preserve">
    <value>Show link to create new site</value>
  </data>
  <data name="ShowEditLinkName" xml:space="preserve">
    <value>Show Edit Link</value>
  </data>
  <data name="ShowEditLinkDesc" xml:space="preserve">
    <value>Show link to edit site</value>
  </data>
  <data name="ExpandTopName" xml:space="preserve">
    <value>Expand Top Level</value>
  </data>
  <data name="ExpandTopDesc" xml:space="preserve">
    <value>Show the top site expanded by default.</value>
  </data>
  <data name="OpenNewWindowName" xml:space="preserve">
    <value>Open in new window</value>
  </data>
  <data name="OpenNewWindowDesc" xml:space="preserve">
    <value>Should this site open in a new window?</value>
  </data>
  <data name="HTMLEditText" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="HTMLEditTitle" xml:space="preserve">
    <value>Go to site settings</value>
  </data>
  <data name="HTMLNewText" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="HTMLNewTitle" xml:space="preserve">
    <value>Create a new sub site at this level</value>
  </data>
  <data name="ErrorNotConfigured" xml:space="preserve">
    <value>Not all required properties have been configured.</value>
  </data>
  <data name="ErrorURL" xml:space="preserve">
    <value>The configured URL is not valid.</value>
  </data>
  <data name="NextText" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="NoSiteAvilable" xml:space="preserve">
    <value>You do not have access to any of the {0}.</value>
  </data>
  <data name="NoSitesForLoginUserSelectAnother" xml:space="preserve">
    <value>The selected child does not have access to any of the {0}.</value>
  </data>
  <data name="NotAuthorizedHome" xml:space="preserve">
    <value>You are not authorized.</value>
  </data>
  <data name="PageSizeDesc" xml:space="preserve">
    <value>Enter the number of elements you want to see per page.</value>
  </data>
  <data name="PageSizeError" xml:space="preserve">
    <value>The number of items per page is not valid, Please enter a number greater than 0.</value>
  </data>
  <data name="PageSizeName" xml:space="preserve">
    <value>Number of items to be displayed per page</value>
  </data>
  <data name="PrevText" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="Sites" xml:space="preserve">
    <value>sites</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>You are not authorized to list sub-sites.</value>
  </data>
  <data name="UnitDesc" xml:space="preserve">
    <value>Enter the unit that the sub-site will simulate. (ex. classes, schools, sites, etc.)</value>
  </data>
  <data name="UnitName" xml:space="preserve">
    <value>Unit Name</value>
  </data>
  <data name="VeiwSitesForUser" xml:space="preserve">
    <value>Viewing {0} for the user {1}</value>
  </data>
</root>